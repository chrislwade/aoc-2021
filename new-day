#!/usr/bin/env ruby

require 'dotenv/load'
require 'http'

day = ARGV.shift

if day.nil?
  $stderr.puts "Usage: #{File.basename($0)} <day(1..25)>"
  exit 1
end

day = '%02i' % [day.to_i]

input  = "input/day#{day}.txt"
ruby   = "lib/day#{day}.rb"
sample = "spec/fixtures/day#{day}.txt"

if [input, ruby, sample].any? {|file| File.exists?(file)}
  $stderr.puts "Day #{day} already implemented!"
end

File.open(input, 'w') do |file|
  response = HTTP.cookies(session: ENV['SESSION']).get("https://adventofcode.com/2021/day/#{day.to_i}/input")
  if response.code == 200
    file.puts response.body.to_s
  else
    $stderr.puts "Could not fetch puzzle input for day #{day}."
  end
end

File.open(ruby, 'w') do |file|
  file.puts <<~EOF
    require 'day'

    class Day#{day} < Day
      def self.expected
        {puzzle1: 'implemented', puzzle2: 'implemented'}
      end

      def display
        puts "--- Day #{day}: Puzzle Name ---"
        puts "What is the puzzle 1 result?"
        puts "- Puzzle 1: \#{puzzle1}"
        puts "What is the puzzle 2 result?"
        puts "- Puzzle 2: \#{puzzle2}"
      end

      def puzzle1
        raise 'Day #{day} puzzle 1 not yet implemented!'
      end

      def puzzle2
        raise 'Day #{day} puzzle 2 not yet implemented!'
      end
    end
  EOF
end

File.open(sample, 'w') do |file|
  file.puts "Replace with sample input for day #{day}."
end